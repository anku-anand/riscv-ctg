xnor:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      xnor: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      <<: [*base_rs1val_sgn , *base_rs2val_sgn , *rfmt_val_comb_sgn]
      abstract_comb:
        'sp_dataset(xlen)': 0
        'walking_ones("rs1_val", xlen)': 0
        'walking_zeros("rs1_val", xlen)': 0
        'alternate("rs1_val",xlen)': 0
        'walking_ones("rs2_val", xlen)': 0
        'walking_zeros("rs2_val", xlen)': 0
        'alternate("rs2_val",xlen)': 0
        
zext:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      zext: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      'rs1_val == 0': 0
      'rs1_val == 128': 0
      'rs1_val == 65408': 0
      abstract_comb:
        'walking_ones("rs1_val", xlen, False)': 0
        
andn:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      andn: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      <<: [*base_rs1val_sgn , *base_rs2val_sgn , *rfmt_val_comb_sgn]
      abstract_comb:
        'sp_dataset(xlen)': 0
        'walking_ones("rs1_val", xlen)': 0
        'walking_zeros("rs1_val", xlen)': 0
        'alternate("rs1_val",xlen)': 0
        'walking_ones("rs2_val", xlen)': 0
        'walking_zeros("rs2_val", xlen)': 0
        'alternate("rs2_val",xlen)': 0
        
clz:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      clz: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      'rs1_val == 0': 0
      'rs1_val == -1': 0
      abstract_comb:
        'walking_ones("rs1_val", xlen, False)': 0
        'walking_zeros("rs1_val", xlen, False)': 0
        
ctz:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      ctz: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      'rs1_val == 0': 0
      'rs1_val == -1': 0
      abstract_comb:
        'walking_ones("rs1_val", xlen, False)': 0
        'walking_zeros("rs1_val", xlen, False)': 0
        
cpop:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      cpop: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      'rs1_val == 0': 0
      'rs1_val == -1': 0
      abstract_comb:
        'walking_ones("rs1_val", xlen, False)': 0
        'walking_zeros("rs1_val", xlen, False)': 0
 
        
max:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      max: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      <<: [*base_rs1val_sgn , *base_rs2val_sgn , *rfmt_val_comb_sgn]
      abstract_comb:
        'sp_dataset(xlen)': 0
        'walking_ones("rs1_val", xlen)': 0
        'walking_zeros("rs1_val", xlen)': 0
        'alternate("rs1_val",xlen)': 0
        'walking_ones("rs2_val", xlen)': 0
        'walking_zeros("rs2_val", xlen)': 0
        'alternate("rs2_val",xlen)': 0
        
maxu:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      maxu: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      <<: [*base_rs1val_unsgn , *base_rs2val_unsgn , *rfmt_val_comb_unsgn]
      abstract_comb:
        'sp_dataset(xlen,signed=False)': 0
        'walking_ones("rs1_val", xlen,False)': 0
        'walking_zeros("rs1_val", xlen,False)': 0
        'alternate("rs1_val",xlen,False)': 0
        'walking_ones("rs2_val", xlen,False)': 0
        'walking_zeros("rs2_val", xlen,False)': 0
        'alternate("rs2_val",xlen,False)': 0
        
min:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      min: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      <<: [*base_rs1val_sgn , *base_rs2val_sgn , *rfmt_val_comb_sgn]
      abstract_comb:
        'sp_dataset(xlen)': 0
        'walking_ones("rs1_val", xlen)': 0
        'walking_zeros("rs1_val", xlen)': 0
        'alternate("rs1_val",xlen)': 0
        'walking_ones("rs2_val", xlen)': 0
        'walking_zeros("rs2_val", xlen)': 0
        'alternate("rs2_val",xlen)': 0
        
minu:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      minu: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      <<: [*base_rs1val_unsgn , *base_rs2val_unsgn , *rfmt_val_comb_unsgn]
      abstract_comb:
        'sp_dataset(xlen,signed=False)': 0
        'walking_ones("rs1_val", xlen,False)': 0
        'walking_zeros("rs1_val", xlen,False)': 0
        'alternate("rs1_val",xlen,False)': 0
        'walking_ones("rs2_val", xlen,False)': 0
        'walking_zeros("rs2_val", xlen,False)': 0
        'alternate("rs2_val",xlen,False)': 0
        

orc.b:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      orc.b: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      'rs1_val == 16909320': 0
      'rs1_val == 33818625': 0
      'rs1_val == 67633410': 0
      'rs1_val == 134283780': 0
      abstract_comb:
        'walking_ones("rs1_val", xlen, False)': 0
        
orn:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      orn: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      <<: [*base_rs1val_sgn , *base_rs2val_sgn , *rfmt_val_comb_sgn]
      abstract_comb:
        'sp_dataset(xlen)': 0
        'walking_ones("rs1_val", xlen)': 0
        'walking_zeros("rs1_val", xlen)': 0
        'alternate("rs1_val",xlen)': 0
        'walking_ones("rs2_val", xlen)': 0
        'walking_zeros("rs2_val", xlen)': 0
        'alternate("rs2_val",xlen)': 0
        
rev8:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      rev8: 0
    rs1: 
      <<: *all_regs
    rd: 
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      'rs1_val == 16909320': 0
      'rs1_val == 33818625': 0
      'rs1_val == 67633410': 0
      'rs1_val == 134283780': 0
      abstract_comb:
        'walking_ones("rs1_val", xlen, False)': 0
        
rol:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      rol: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      <<: *rfmt_base_shift
      abstract_comb:  
        'walking_ones("rs1_val", xlen)': 0
        'walking_zeros("rs1_val", xlen)': 0
        'alternate("rs1_val",xlen)': 0
        'sp_dataset(xlen,var_lst=["rs1_val"])': 0
        'walking_ones("rs2_val", ceil(log(xlen,2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(xlen,2)), False)': 0
        'alternate("rs2_val", ceil(log(xlen,2)), False)': 0

ror:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      ror: 0
    rs1: 
      <<: *all_regs
    rs2: 
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb: 
      <<: *rfmt_op_comb
    val_comb:
      <<: *rfmt_base_shift
      abstract_comb:      
        'walking_ones("rs1_val", xlen)': 0
        'walking_zeros("rs1_val", xlen)': 0
        'alternate("rs1_val",xlen)': 0    
        'sp_dataset(xlen,var_lst=["rs1_val"])': 0
        'walking_ones("rs2_val", ceil(log(xlen,2)), False)': 0
        'walking_zeros("rs2_val", ceil(log(xlen,2)), False)': 0
        'alternate("rs2_val", ceil(log(xlen,2)), False)': 0

        
rori:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      rori: 0
    rs1: 
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      <<: *ifmt_base_shift
      abstract_comb:      
        'sp_dataset(xlen,["rs1_val"])': 0
        'walking_ones("rs1_val", xlen)': 0
        'walking_zeros("rs1_val", xlen)': 0
        'alternate("rs1_val",xlen)': 0
        'walking_ones("imm_val", ceil(log(xlen,2)), False)': 0
        'walking_zeros("imm_val", ceil(log(xlen,2)), False)': 0
        'alternate("imm_val", ceil(log(xlen,2)), False)': 0
        
sext.b:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      sext.b: 0
    rs1: 
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      'rs1_val == 0': 0
      'rs1_val == 32768': 0
      abstract_comb:      
        'walking_ones("rs1_val", xlen, False)': 0
        
sext.h:
    config: 
      - check ISA:=regex(.*RV32.*I.*B.*)
      - check ISA:=regex(.*RV32.*I.*Zbb.*)
    opcode: 
      sext.h: 0
    rs1: 
      <<: *all_regs
    rd:
      <<: *all_regs
    op_comb: 
      <<: *ifmt_op_comb
    val_comb:
      'rs1_val == 0': 0
      'rs1_val == 128': 0
      'rs1_val == 65408': 0
      abstract_comb:      
        'walking_ones("rs1_val", xlen, False)': 0
